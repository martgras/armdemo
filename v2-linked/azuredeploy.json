{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "apiProfile": "2018-06-01-profile",
   "parameters": {
      "adminUsername": {
         "type": "string",
         "metadata": {
            "description": "The name of the administrator of the new VM. Exclusion list: 'admin','administrator'"
         }
      },
      "adminPassword": {
         "type": "securestring",
         "metadata": {
            "description": "The password for the administrator account of the new VM"
         }
      },
      "adminPublicKey": {
         "type": "securestring",
         "defaultValue": "",
         "metadata": {
            "description": "The public key for the administrator account of the new VM"
         }
      },
      "vmName": {
         "type": "string",
         "metadata": {
            "description": "The name of the of the new VM. Exclusion list: 'admin','administrator'"
         }
      },
      "VmSize": {
         "type": "string",
         "defaultValue": "Standard_B1s",
         "metadata": {
            "description": "The size of the VM"
         }
      },
      "hostname": {
         "type": "string",
         "metadata": {
            "description": "The hostname of the of the new VM. (used in the letsencrypt certificate request)"
         }
      },
      "alternatehostname": {
         "type": "string",
         "defaultValue": "",
         "metadata": {
            "description": "hostname for the public IP FQDN: <alternatehostname>.<location>.cloudapp.azure.com (used in the letsencrypt certificate request)"
         }
      },
      "dnszone": {
         "type": "string",
         "defaultValue": "/subscriptions/9568bca5-e00d-485d-b654-7078bdeea839/resourceGroups/debugmonkeyresgroup/providers/Microsoft.Network/dnszones/debugmonkey.eu",
         "metadata": {
            "description": "domain name of the of the new VM. The value can be resourceid  of the Azure Hosted DNS Zone(e.g. /subscriptions/<subscriptionId>/resourceGroups/<resourcegroup>/providers/Microsoft.Network/dnszones/example.com) or domain name if DNS is not hosted in Azure (e.g. mqtt.example.com )"
         }
      },
      "letsencypt-account": {
         "type": "string",
         "metadata": {
            "description": "Email used for registration and recovery contact with Letsencrypt. Use comma to register multiple emails, ex:  u1@example.com,u2@example.com."
         }
      },
      "mqttpwd": {
         "type": "securestring",
         "defaultValue": "YTQWs9qtPgeTiyDaQLDI",
         "metadata": {
            "description": "Password for mqtt user1 "
         }
      },
      "location": {
         "type": "string",
         "defaultValue": "[resourceGroup().location]",
         "metadata": {
            "description": "Location for all resources."
         }
      },
      "tcpports": {
         "type": "array",
         "defaultValue": [
            {
               "port": "22",
               "access": "Deny",
               "name": "SSH",
               "sourceAddressPrefix": "CorpNetPublic"
            },
            {
               "port": "80",
               "access": "Allow",
               "name": "HTTP"
            },
            {
               "port": "8883",
               "access": "Allow",
               "name": "MQTT-TLS"
            },
            {
               "port": "8083",
               "access": "Allow",
               "name": "MQTT-WebSocket"
            }
         ]
      }
   },
   "variables": {
      "publicIpHostname": "[if(empty(parameters('alternatehostname') ), parameters('hostname'),parameters('alternatehostname'))]",
      "dnszone-resid": "[if(contains(parameters('dnszone'),'/'),parameters('dnszone'),'')]"
   },
   "resources": [
      {
         "name": "createResources",
         "type": "Microsoft.Resources/deployments",
         "apiVersion": "2019-08-01",
         "properties": {
            "mode": "Incremental",
            "expressionEvaluationOptions": {
               "scope": "inner"
            },
            "parameters": {
               "vmName": {
                  "value": "[parameters('vmName')]"
               },
               "location": {
                  "value": "[parameters('location')]"
               },
               "adminUsername": {
                  "value": "[parameters('adminUsername')]"
               },
               "adminPassword": {
                  "value": "[parameters('adminPassword')]"
               },
               "adminPublicKey": {
                  "value": "[parameters('adminPublicKey')]"
               },
               "vmSize": {
                  "value": "[parameters('vmSize')]"
               },
               "hostname": {
                  "value": "[parameters('hostname')]"
               },
               "publicIpHostname": {
                  "value": "[variables('publicIpHostname')]"
               },
               "dnszone": {
                  "value": "[if(not(empty(variables('dnszone-resid'))),skip(variables('dnszone-resid'),add(1,lastIndexOf(variables('dnszone-resid'),'/'))),parameters('dnszone'))]"
               },
               "letsencypt-account": {
                  "value": "[parameters('letsencypt-account')]"
               },
               "mqttpwd": {
                  "value": "[parameters('mqttpwd')]"
               },
               "tcpports": {
                  "value": "[parameters('tcpports')]"
               }
            },
            "templateLink": {
               "uri": "[uri(deployment().properties.templateLink.uri, 'createresources.json')]",
               "contentVersion": "1.0.0.0"
            }
         }
      },
      {
         "name": "getpublicip",
         "type": "Microsoft.Resources/deployments",
         "apiVersion": "2019-08-01",
         "dependsOn": [
            "createResources"
         ],
         "properties": {
            "mode": "Incremental",
            "parameters": {
               "vmName": {
                  "value": "[parameters('vmName')]"
               },
               "hostname": {
                  "value": "[variables('publicIpHostname')]"
               },
               "location": {
                  "value": "[parameters('location')]"
               }
            },
            "templateLink": {
               "uri": "[uri(deployment().properties.templateLink.uri, 'getpublicip.json')]",
               "contentVersion": "1.0.0.0"
            }

         }
      },
      {
         "name": "updatedns",
         "type": "Microsoft.Resources/deployments",
         "apiVersion": "2019-11-01",
         "condition": "[not(empty(variables('dnszone-resid')))]",
         "subscriptionId": "[if(not(empty(variables('dnszone-resid'))),split(variables('dnszone-resid'),'/')[2],'not used make engine happy')]",
         "resourceGroup": "[if(not(empty(variables('dnszone-resid'))),split(variables('dnszone-resid'),'/')[4],'not used make engine happy')]",
         "dependsOn": [
            "getpublicip"
         ],
         "properties": {
            "mode": "Incremental",
            "parameters": {
               "zone": {
                  "value": "[if(not(empty(variables('dnszone-resid'))),skip(variables('dnszone-resid'),add(1,lastIndexOf(variables('dnszone-resid'),'/'))),'not used make engine happy')]"
               },
               "host": {
                  "value": "[parameters('hostname')]"
               },
               "ipv4Address": {
                  "value": "[reference('getpublicip').outputs.PublicIPv4Address.value]"
               },
               "ipv6Address": {
                  "value": "[reference('getpublicip').outputs.PublicIPv6Address.value]"
               }
            },
            "templateLink": {
               "uri": "[uri(deployment().properties.templateLink.uri, 'updatedns.json')]",
               "contentVersion": "1.0.0.0"
            }

         }
      },
      {
         "name": "createRBAC",
         "type": "Microsoft.Resources/deployments",
         "resourceGroup": "[resourceGroup().name]",
         "apiVersion": "2018-05-01",
         "dependsOn": [
            "createResources"
         ],
         "properties": {
            "mode": "Incremental",
            "parameters": {
               "principalId": {
                  "value": "[reference('Microsoft.Resources/deployments/createResources', '2018-05-01').outputs.principalId.value]"
               }
            },
            "templateLink": {
               "uri": "[uri(deployment().properties.templateLink.uri, 'createrbac.json')]",
               "contentVersion": "1.0.0.0"
            }
         }
      }
   ],
   "outputs": {
   }
}